name: Manual Deployer

on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Qual projeto vocÃª quer implantar?'
        required: true
        type: choice
        options:
          - integra
          - compliance
          - tricket
      branch:
        description: 'Qual branch do projeto?'
        required: true
        default: 'main'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 1. Exibindo informaÃ§Ãµes do Deploy
        run: |
          echo "ðŸš€ Iniciando deploy para o projeto: ${{ inputs.project_name }}"
          echo "ðŸŒ± Branch: ${{ inputs.branch }}"

      - name: 2. Checkout do repositÃ³rio Deployer
        uses: actions/checkout@v3
        with:
          path: 'deployer'

      - name: 3. Checkout do repositÃ³rio da AplicaÃ§Ã£o
        uses: actions/checkout@v3
        with:
          repository: kabrantecnologia/${{ inputs.project_name }}-frontend
          ref: ${{ inputs.branch }}
          path: 'app-source'
          token: ${{ secrets.GH_PAT }} # NecessÃ¡rio para clonar repositÃ³rios privados

      - name: 4. Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 5. Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 6. Build e Push da Imagem Docker
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ./app-source
          file: ./deployer/${{ inputs.project_name }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ inputs.project_name }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ inputs.project_name }}:latest

      - name: 7. Deploy no Servidor
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/joaohenrique/workspaces/projects/${{ inputs.project_name }}
            echo "DOCKER_IMAGE=ghcr.io/${{ github.repository_owner }}/${{ inputs.project_name }}:latest" > .env
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GH_PAT }}
            docker compose pull
            docker compose up -d
            docker logout ghcr.io
